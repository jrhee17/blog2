<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="/blog2/feed.xml" rel="self" type="application/atom+xml" /><link href="/blog2/" rel="alternate" type="text/html" /><updated>2019-01-30T15:38:02+00:00</updated><id>/blog2/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Using rxjs as an Ephemeral Storage for Mobile Applications</title><link href="/blog2/devnotes/2019/01/30/using-rxjs-as-an-ephemeral-storage.html" rel="alternate" type="text/html" title="Using rxjs as an Ephemeral Storage for Mobile Applications" /><published>2019-01-30T11:41:24+00:00</published><updated>2019-01-30T11:41:24+00:00</updated><id>/blog2/devnotes/2019/01/30/using-rxjs-as-an-ephemeral-storage</id><content type="html" xml:base="/blog2/devnotes/2019/01/30/using-rxjs-as-an-ephemeral-storage.html">&lt;h2 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h2&gt;

&lt;h1 id=&quot;purpose&quot;&gt;Purpose&lt;/h1&gt;
&lt;p&gt;We are developing a Bitcoin Alarm app which simply allows users to&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Add bitcoin alarms for a certain price&lt;/li&gt;
  &lt;li&gt;Receive push notifications when a price is met&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is a contrived version of the overall flow of the app&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/asisflow_uml.png&quot; alt=&quot;uml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A few notable points include&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Many REST api calls
    &lt;ul&gt;
      &lt;li&gt;This is a rapid prototyping app meaning requirements may change suddenly&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Websockets
    &lt;ul&gt;
      &lt;li&gt;This is for realtime ticker (coin price) updates and alarm triggers. Websockets are opened automatically on background -&amp;gt; foreground transition.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following is a sample alarm list screen&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/alarm_list.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A sample add alarm screen&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/add_alarm.png&quot; alt=&quot;screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Just in case anyone isn’t familiar with crypto-jargon&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;exchange&lt;/code&gt;: Entities (businesses) which trade cryptocurrency&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;coin&lt;/code&gt;: Type of cryptocurrency (BTC, ETH , etc.)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;problem&quot;&gt;Problem&lt;/h1&gt;
&lt;p&gt;We would like to display &lt;code class=&quot;highlighter-rouge&quot;&gt;In-app-purchase to add more alarms&lt;/code&gt;
(It’s unfortunate, but with server costs going out every month, every developer has to make &lt;em&gt;some&lt;/em&gt; money)&lt;/p&gt;

&lt;p&gt;The condition for which we would like to display this is&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;3 alarms are already added
    &lt;ul&gt;
      &lt;li&gt;Saved in server – can retrieve by REST [GET] &lt;code class=&quot;highlighter-rouge&quot;&gt;/alarms&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;The user has not purchased the app
    &lt;ul&gt;
      &lt;li&gt;Saved in server. To decide if also need to save in client&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;Note: Obviously we would also have to check whether the user has purchased this feature when the alarm is actually added.
This check is just to notify users before the actual purchase.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;points-to-consider&quot;&gt;Points to consider&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;I would like to be able to maintain control over how alarms are added from the server side
    &lt;ul&gt;
      &lt;li&gt;What if I want to change the number of free alarms from &lt;code class=&quot;highlighter-rouge&quot;&gt;3&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;5&lt;/code&gt; without app deployment?&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I would like to minimize storage from the client side
    &lt;ul&gt;
      &lt;li&gt;What if I want to get rid of this add-alarm-restriction? Will there be useless client data/code?&lt;/li&gt;
      &lt;li&gt;Data inconsistency always happens between server and clients&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I would like to still maintain some efficiency
    &lt;ul&gt;
      &lt;li&gt;Should try to avoid calling the same api multiple times in different screens&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;I’m all for asynchronous everything, but flickering screens are not good for UX&lt;/li&gt;
  &lt;li&gt;I would like a generalized pattern (redux???) that can handle calls like this
    &lt;ul&gt;
      &lt;li&gt;Unfortunately, while using &lt;code class=&quot;highlighter-rouge&quot;&gt;react-navigation&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;react-native&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;react-redux&lt;/code&gt; isn’t an option.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Minimize number of server apis if possible&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;possible-solutions&quot;&gt;Possible solutions&lt;/h1&gt;
&lt;p&gt;With the above points in mind, I drafted the following 4 possible solutions&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pass Parameters&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/passparams_uml.png&quot; alt=&quot;uml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Simply call &lt;code class=&quot;highlighter-rouge&quot;&gt;navigate(routeName, params)&lt;/code&gt; with alarm list as params&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Always have to retrieve alarm list before navigating to add alarm screen&lt;/li&gt;
  &lt;li&gt;Domain-wise Add-Alarm screen has little to do with already added alarms&lt;/li&gt;
  &lt;li&gt;Hard to control add-alarm policy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Simple and straightforward to achieve&lt;/li&gt;
  &lt;li&gt;Efficient - no extra server calls&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Rest Call Every Time&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Call &lt;code class=&quot;highlighter-rouge&quot;&gt;[REST] GET alarm/addable&lt;/code&gt; every time add alarm screen is loaded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;REST call every time page is loaded&lt;/li&gt;
  &lt;li&gt;Need to create a non-restful api&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Simple and straightforward to achieve&lt;/li&gt;
  &lt;li&gt;Easy to control add-alarm policy&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/rest_uml.png&quot; alt=&quot;uml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websocket Call&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/socket_uml.png&quot; alt=&quot;uml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Send &lt;code class=&quot;highlighter-rouge&quot;&gt;{'type': 'check.alarm.addable'}&lt;/code&gt; every time add alarm screen is loaded&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Minimal efficiency advantage over Rest call (assuming HTTP/2)&lt;/li&gt;
  &lt;li&gt;Hard to develop good UI for asynchronous result&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;no real advantage&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;RXJS cached variant&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/cached_uml.png&quot; alt=&quot;uml&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Description&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Cache api calls using redux pattern and use cached to determine whether alarm is addable&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Cons&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Challenging to implement&lt;/li&gt;
  &lt;li&gt;Can’t control logic from server&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;Pros&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Efficient - no extra server calls&lt;/li&gt;
  &lt;li&gt;Generic - no extra api calls&lt;/li&gt;
  &lt;li&gt;Client won’t be saving anything.
Whenever app dies, all data will be reset.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;final-verdict&quot;&gt;Final Verdict&lt;/h1&gt;

&lt;p&gt;I have decided to go with &lt;strong&gt;Redux pattern using RXJS&lt;/strong&gt; because I believe it will be worth the hassle.
In my head, it will go something like this…&lt;/p&gt;

&lt;p&gt;&lt;em&gt;EphemeralStorage&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EphemeralStorage&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmListSubject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BehaviorSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;updateAlarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;await&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RestClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getJson&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`/alarms`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmListSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;getAlarmListSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmListSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EphemeralStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;AlarmList Screen&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AlarmList&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;componentDidMount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;EphemeralStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAlarmListSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetchAlarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;fetchAlarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;EphemeralStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;updateAlarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;AddAlarm Screen&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AddAlarm&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;React&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Component&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;checkAlarmAddable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;EphemeralStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getAlarmListSubject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
                &lt;span class=&quot;na&quot;&gt;addable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alarmList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;purchased&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NOTE: Please don’t trust the code I have just written above – it is pseudocode that kind of spiralled out of control.&lt;/p&gt;

&lt;p&gt;Also, some more considerations&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Need to make actions more readable (possibly make it more redux-esque)&lt;/li&gt;
  &lt;li&gt;Not entirely comfortable using rxjs, so I’ll need to go through the documentation again (for the 20th time…)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;When I’m done with this task, hopefully I’ll be able to give some updates whether I still think this was the right decision.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog2/assets/20190130/new_standard.jpeg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Problem Statement</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="/blog2/jekyll/update/2019/01/27/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2019-01-27T13:56:24+00:00</published><updated>2019-01-27T13:56:24+00:00</updated><id>/blog2/jekyll/update/2019/01/27/welcome-to-jekyll</id><content type="html" xml:base="/blog2/jekyll/update/2019/01/27/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Mysql Select Flow</title><link href="/blog2/mysql/2018/09/03/mysql-select.html" rel="alternate" type="text/html" title="Mysql Select Flow" /><published>2018-09-03T19:12:11+00:00</published><updated>2018-09-03T19:12:11+00:00</updated><id>/blog2/mysql/2018/09/03/mysql-select</id><content type="html" xml:base="/blog2/mysql/2018/09/03/mysql-select.html">&lt;p&gt;Mysql&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mysql_execute_command
    &lt;ul&gt;
      &lt;li&gt;Get table to select from&lt;/li&gt;
      &lt;li&gt;Reset connection info&lt;/li&gt;
      &lt;li&gt;Check if read-only query&lt;/li&gt;
      &lt;li&gt;case GTID_STATEMENT_EXECUTE&lt;/li&gt;
      &lt;li&gt;open temporary table&lt;/li&gt;
      &lt;li&gt;case SQLCOM_SELECT&lt;/li&gt;
      &lt;li&gt;check privileges&lt;/li&gt;
      &lt;li&gt;execute_sqlcom_select
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open_tables_for_query&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open_tables&lt;/code&gt;
                &lt;ul&gt;
                  &lt;li&gt;for each table do &lt;code class=&quot;highlighter-rouge&quot;&gt;open_and_process_table&lt;/code&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open_table&lt;/code&gt;
                        &lt;ul&gt;
                          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;open_table_get_mdl_lock&lt;/code&gt;
                            &lt;ul&gt;
                              &lt;li&gt;thd-&amp;gt;mdl_context.acquire_lock&lt;/li&gt;
                              &lt;li&gt;ticket
                                &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  {
  ...
  m_type = MDL_INTENTION_EXCLUSIVE
  m_duration = MDL_STATEMENT
  ...
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                                &lt;/div&gt;
                              &lt;/li&gt;
                              &lt;li&gt;mdl_request
                                &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  type = MDL_SHARED_READ
  duration = MDL_TRANSACTION
  key = (m_length = 17, m_db_name_length = 7, m_ptr = char [387] @ 0x00007f99fbb1f164)
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                                &lt;/div&gt;
                              &lt;/li&gt;
                              &lt;li&gt;try_acquire_lock_impl(mdl_request, &amp;amp;ticket)
                                &lt;ul&gt;
                                  &lt;li&gt;check if context already holds shared lock on subject&lt;/li&gt;
                                  &lt;li&gt;create MDL_ticket&lt;/li&gt;
                                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MDL_lock::get_unobtrusive_lock_increment&lt;/code&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request-&amp;gt;key.mdl_namespace()&lt;/code&gt;: TABLE&lt;/li&gt;
                                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;m_object_lock_strategy.m_unobtrusive_lock_increment[request-&amp;gt;type]&lt;/code&gt;&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_mdl_create&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock= mdl_locks.find_or_insert(m_pins, key, &amp;amp;pinned)&lt;/code&gt;
                                    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  (MDL_lock) $7 = {
    key = (m_length = 17, m_db_name_length = 7, m_ptr = char [387] @ 0x00007fe5f42dc604)
    m_rwlock = {
      m_prlock = {
        lock = (__sig = 1297437786, __opaque = char [56] @ 0x00007fe5f42dc790)
        no_active_readers = (__sig = 1129270852, __opaque = char [40] @ 0x00007fe5f42dc7d0)
        active_readers = 0
        writers_waiting_readers = 0
        active_writer = '\0'
        writer_thread = 0x0000000000000000
      }
      m_psi = 0x000000010e4c6100
    }
    m_granted = {
      m_list = {
        I_P_List_fast_push_back&amp;lt;MDL_ticket&amp;gt; = {
          m_last = 0x0000000103f67200
        }
        m_first = 0x0000000000000000
      }
      m_bitmap = 0
    }
    m_waiting = {
      m_list = {
        I_P_List_fast_push_back&amp;lt;MDL_ticket&amp;gt; = {
          m_last = 0x0000000103f67218
        }
        m_first = 0x0000000000000000
      }
      m_bitmap = 0
    }
    m_hog_lock_count = 0
    m_piglet_lock_count = 0
    m_current_waiting_incompatible_idx = 0
    m_obtrusive_locks_granted_waiting_count = 0
    m_fast_path_state = 1048576
    m_strategy = 0x0000000101dafbd0
  }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                                    &lt;/div&gt;
                                  &lt;/li&gt;
                                  &lt;li&gt;check if other locks exist&lt;/li&gt;
                                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_object_used&lt;/code&gt;
                                    &lt;ul&gt;
                                      &lt;li&gt;If pinned (singleton?), decrement &lt;code class=&quot;highlighter-rouge&quot;&gt;m_unused_lock_objects&lt;/code&gt;&lt;/li&gt;
                                    &lt;/ul&gt;
                                  &lt;/li&gt;
                                  &lt;li&gt;push to &lt;code class=&quot;highlighter-rouge&quot;&gt;m_tickets&lt;/code&gt;&lt;/li&gt;
                                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_mdl_set_status(ticket-&amp;gt;m_psi, MDL_ticket::GRANTED)&lt;/code&gt;: Set psi status to granted if psi is not null&lt;/li&gt;
                                &lt;/ul&gt;
                              &lt;/li&gt;
                              &lt;li&gt;If ticket is not null, lock was acquired -&amp;gt; return&lt;/li&gt;
                            &lt;/ul&gt;
                          &lt;/li&gt;
                          &lt;li&gt;compute hash
                            &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  p table_list-&amp;gt;open_strategy
  (TABLE_LIST::(anonymous enum)) $21 = OPEN_NORMAL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;                            &lt;/div&gt;
                          &lt;/li&gt;
                          &lt;li&gt;Get table cache, lock mutex for table cache, and try to get cached table (if found, unlock mutex)&lt;/li&gt;
                          &lt;li&gt;Add table to &lt;code class=&quot;highlighter-rouge&quot;&gt;table_list&lt;/code&gt;&lt;/li&gt;
                          &lt;li&gt;Initialize table instance&lt;/li&gt;
                        &lt;/ul&gt;
                      &lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;‘read_lock_type_for_table’: Change to TL_READ thread lock (&lt;code class=&quot;highlighter-rouge&quot;&gt;tbl-&amp;gt;reginfo.lock_type&lt;/code&gt;)&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;handle_query&lt;/code&gt;
            &lt;ul&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select-&amp;gt;prepare&lt;/code&gt;: prepare query block for optimization&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_tables&lt;/code&gt;
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql_lock_tables&lt;/code&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_tables_check&lt;/code&gt;: check if tables ares locked&lt;/li&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;get_lock_data&lt;/code&gt;: create lock&lt;/li&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;lock_external&lt;/code&gt;: external ha lock (&lt;code class=&quot;highlighter-rouge&quot;&gt;F_RDLCK&lt;/code&gt;)&lt;/li&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thr_lock_errno_to_mysql&lt;/code&gt;: lock on half of lock data array&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;thd-&amp;gt;lex-&amp;gt;lock_tables_state= Query_tables_list::LTS_LOCKED;&lt;/code&gt;&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;query_cache.store_query()&lt;/code&gt;&lt;/li&gt;
              &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;select-&amp;gt;join-&amp;gt;exec()&lt;/code&gt;: execute query
                &lt;ul&gt;
                  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do_select()&lt;/code&gt;
                    &lt;ul&gt;
                      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;first_select&lt;/code&gt;: perform actual query&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trans_commit_stmt&lt;/code&gt;: perform transaction commit&lt;/li&gt;
      &lt;li&gt;release metadata locks&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">Mysql</summary></entry><entry><title type="html">Jelly-filled donuts are my favorite2</title><link href="/blog2/first/2016/05/29/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Jelly-filled donuts are my favorite2" /><published>2016-05-29T19:12:11+00:00</published><updated>2016-05-29T19:12:11+00:00</updated><id>/blog2/first/2016/05/29/welcome-to-jekyll</id><content type="html" xml:base="/blog2/first/2016/05/29/welcome-to-jekyll.html">&lt;p&gt;Jelly-filled donuts are my favorite type of donuts because I like getting them without knowing what’s inside of them. I like to be surprised the moment I bite into them :)&lt;/p&gt;</content><author><name></name></author><summary type="html">Jelly-filled donuts are my favorite type of donuts because I like getting them without knowing what’s inside of them. I like to be surprised the moment I bite into them :)</summary></entry></feed>